# microservice specific routes

->          /hmrc-frontend                                                                    hmrcfrontend.Routes

->          /error                                                                            error.Routes

GET         /assets/*file                                                                     controllers.Assets.versioned(path="/public", file: Asset)

GET         /refresh-session                                                                  controllers.KeepAliveController.keepAlive()

GET         /trader/:ern/movement/:arc/no-information-receipt                                 controllers.JourneyRecoveryController.onPageLoad(ern: String, arc: String)

GET         /account/sign-out                                                                 controllers.auth.AuthController.signOut(becauseOfTimeout: Boolean ?= false)

GET         /trader/:ern/movement/:arc                                                        controllers.IndexController.onPageLoad(ern: String, arc: String)
POST        /trader/:ern/movement/:arc                                                        controllers.IndexController.onSubmit(ern: String, arc: String)

GET         /trader/:ern/movement/:arc/when-take-delivery                                     controllers.DateOfArrivalController.onPageLoad(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/when-take-delivery                                     controllers.DateOfArrivalController.onSubmit(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/when-take-delivery/change                              controllers.DateOfArrivalController.onPageLoad(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/when-take-delivery/change                              controllers.DateOfArrivalController.onSubmit(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/select-accept-movement                                 controllers.AcceptMovementController.onPageLoad(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/select-accept-movement                                 controllers.AcceptMovementController.onSubmit(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/select-accept-movement/change                          controllers.AcceptMovementController.onPageLoad(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/select-accept-movement/change                          controllers.AcceptMovementController.onSubmit(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/select-more-information                                controllers.AddMoreInformationController.loadMoreInformation(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/select-more-information                                controllers.AddMoreInformationController.submitMoreInformation(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/select-more-information/change                         controllers.AddMoreInformationController.loadMoreInformation(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/select-more-information/change                         controllers.AddMoreInformationController.submitMoreInformation(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/select-shortage-information-movement                   controllers.AddMoreInformationController.loadShortageInformation(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/select-shortage-information-movement                   controllers.AddMoreInformationController.submitShortageInformation(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/select-shortage-information-movement/change            controllers.AddMoreInformationController.loadShortageInformation(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/select-shortage-information-movement/change            controllers.AddMoreInformationController.submitShortageInformation(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/select-excess-information-movement                     controllers.AddMoreInformationController.loadExcessInformation(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/select-excess-information-movement                     controllers.AddMoreInformationController.submitExcessInformation(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/select-excess-information-movement/change              controllers.AddMoreInformationController.loadExcessInformation(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/select-excess-information-movement/change              controllers.AddMoreInformationController.submitExcessInformation(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/select-damage-information-movement                     controllers.AddMoreInformationController.loadDamageInformation(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/select-damage-information-movement                     controllers.AddMoreInformationController.submitDamageInformation(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/select-damage-information-movement/change              controllers.AddMoreInformationController.loadDamageInformation(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/select-damage-information-movement/change              controllers.AddMoreInformationController.submitDamageInformation(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/select-seals-information-movement                      controllers.AddMoreInformationController.loadSealsInformation(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/select-seals-information-movement                      controllers.AddMoreInformationController.submitSealsInformation(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/select-seals-information-movement/change               controllers.AddMoreInformationController.loadSealsInformation(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/select-seals-information-movement/change               controllers.AddMoreInformationController.submitSealsInformation(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/more-information                                       controllers.MoreInformationController.loadMoreInformation(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/more-information                                       controllers.MoreInformationController.submitMoreInformation(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/more-information/change                                controllers.MoreInformationController.loadMoreInformation(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/more-information/change                                controllers.MoreInformationController.submitMoreInformation(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/shortage-information-movement                          controllers.MoreInformationController.loadShortageInformation(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/shortage-information-movement                          controllers.MoreInformationController.submitShortageInformation(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/shortage-information-movement/change                   controllers.MoreInformationController.loadShortageInformation(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/shortage-information-movement/change                   controllers.MoreInformationController.submitShortageInformation(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/excess-information-movement                            controllers.MoreInformationController.loadExcessInformation(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/excess-information-movement                            controllers.MoreInformationController.submitExcessInformation(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/excess-information-movement/change                     controllers.MoreInformationController.loadExcessInformation(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/excess-information-movement/change                     controllers.MoreInformationController.submitExcessInformation(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/damage-information-movement                            controllers.MoreInformationController.loadDamageInformation(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/damage-information-movement                            controllers.MoreInformationController.submitDamageInformation(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/damage-information-movement/change                     controllers.MoreInformationController.loadDamageInformation(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/damage-information-movement/change                     controllers.MoreInformationController.submitDamageInformation(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/seals-information-movement                             controllers.MoreInformationController.loadSealsInformation(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/seals-information-movement                             controllers.MoreInformationController.submitSealsInformation(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/seals-information-movement/change                      controllers.MoreInformationController.loadSealsInformation(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/seals-information-movement/change                      controllers.MoreInformationController.submitSealsInformation(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/other-information-movement                             controllers.OtherInformationController.onPageLoad(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/other-information-movement                             controllers.OtherInformationController.onSubmit(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/other-information-movement/change                      controllers.OtherInformationController.onPageLoad(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/other-information-movement/change                      controllers.OtherInformationController.onSubmit(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/check-answers                                          controllers.CheckYourAnswersController.onPageLoad(ern: String, arc: String)
POST        /trader/:ern/movement/:arc/check-answers                                          controllers.CheckYourAnswersController.onSubmit(ern: String, arc: String)

GET         /trader/:ern/movement/:arc/confirmation                                           controllers.ConfirmationController.onPageLoad(ern: String, arc: String)

GET         /trader/:ern/movement/:arc/how-give-information-movement                          controllers.HowGiveInformationController.onPageLoad(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/how-give-information-movement                          controllers.HowGiveInformationController.onSubmit(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/how-give-information-movement/change                   controllers.HowGiveInformationController.onPageLoad(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/how-give-information-movement/change                   controllers.HowGiveInformationController.onSubmit(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/what-wrong-movement                                    controllers.WrongWithMovementController.loadWrongWithMovement(ern: String, arc: String, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/what-wrong-movement                                    controllers.WrongWithMovementController.submitWrongWithMovement(ern: String, arc: String, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/what-wrong-movement/change                             controllers.WrongWithMovementController.loadWrongWithMovement(ern: String, arc: String, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/what-wrong-movement/change                             controllers.WrongWithMovementController.submitWrongWithMovement(ern: String, arc: String, mode: Mode = CheckMode)

GET         /trader/:ern/movement/:arc/select-item                                            controllers.SelectItemsController.onPageLoad(ern: String, arc: String)

GET         /trader/:ern/movement/:arc/item/:idx/item-details                                 controllers.ItemDetailsController.onPageLoad(ern: String, arc: String, idx: Int)

GET         /trader/:ern/movement/:arc/item/:idx/selected-item-details                        controllers.DetailsSelectItemController.onPageLoad(ern: String, arc: String, idx: Int)
POST        /trader/:ern/movement/:arc/item/:idx/selected-item-details                        controllers.DetailsSelectItemController.onSubmit(ern: String, arc: String, idx: Int)

GET         /trader/:ern/movement/:arc/item/:idx/what-wrong-item                              controllers.WrongWithItemController.loadWrongWithItem(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/item/:idx/what-wrong-item                              controllers.WrongWithItemController.submitWrongWithItem(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/item/:idx/what-wrong-item/change                       controllers.WrongWithItemController.loadWrongWithItem(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/item/:idx/what-wrong-item/change                       controllers.WrongWithItemController.submitWrongWithItem(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
GET         /trader/:ern/movement/:arc/item/:idx/what-wrong-item/review                       controllers.WrongWithItemController.loadWrongWithItem(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)
POST        /trader/:ern/movement/:arc/item/:idx/what-wrong-item/review                       controllers.WrongWithItemController.submitWrongWithItem(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)

GET         /trader/:ern/movement/:arc/item/:idx/about-shortage-excess                        controllers.ItemShortageOrExcessController.onPageLoad(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/item/:idx/about-shortage-excess                        controllers.ItemShortageOrExcessController.onSubmit(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/item/:idx/about-shortage-excess/change                 controllers.ItemShortageOrExcessController.onPageLoad(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/item/:idx/about-shortage-excess/change                 controllers.ItemShortageOrExcessController.onSubmit(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
GET         /trader/:ern/movement/:arc/item/:idx/about-shortage-excess/review                 controllers.ItemShortageOrExcessController.onPageLoad(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)
POST        /trader/:ern/movement/:arc/item/:idx/about-shortage-excess/review                 controllers.ItemShortageOrExcessController.onSubmit(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)

GET         /trader/:ern/movement/:arc/item/:idx/select-seals-information-item                controllers.AddItemMoreInformationController.loadItemSealsInformation(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/item/:idx/select-seals-information-item                controllers.AddItemMoreInformationController.submitItemSealsInformation(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/item/:idx/select-seals-information-item/change         controllers.AddItemMoreInformationController.loadItemSealsInformation(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/item/:idx/select-seals-information-item/change         controllers.AddItemMoreInformationController.submitItemSealsInformation(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
GET         /trader/:ern/movement/:arc/item/:idx/select-seals-information-item/review         controllers.AddItemMoreInformationController.loadItemSealsInformation(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)
POST        /trader/:ern/movement/:arc/item/:idx/select-seals-information-item/review         controllers.AddItemMoreInformationController.submitItemSealsInformation(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)

GET         /trader/:ern/movement/:arc/item/:idx/seals-information-item                       controllers.ItemMoreInformationController.loadItemSealsInformation(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/item/:idx/seals-information-item                       controllers.ItemMoreInformationController.submitItemSealsInformation(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/item/:idx/seals-information-item/change                controllers.ItemMoreInformationController.loadItemSealsInformation(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/item/:idx/seals-information-item/change                controllers.ItemMoreInformationController.submitItemSealsInformation(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
GET         /trader/:ern/movement/:arc/item/:idx/seals-information-item/review                controllers.ItemMoreInformationController.loadItemSealsInformation(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)
POST        /trader/:ern/movement/:arc/item/:idx/seals-information-item/review                controllers.ItemMoreInformationController.submitItemSealsInformation(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)

GET         /trader/:ern/movement/:arc/item/:idx/select-damage-information-item               controllers.AddItemMoreInformationController.loadItemDamageInformation(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/item/:idx/select-damage-information-item               controllers.AddItemMoreInformationController.submitItemDamageInformation(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/item/:idx/select-damage-information-item/change        controllers.AddItemMoreInformationController.loadItemDamageInformation(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/item/:idx/select-damage-information-item/change        controllers.AddItemMoreInformationController.submitItemDamageInformation(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
GET         /trader/:ern/movement/:arc/item/:idx/select-damage-information-item/review        controllers.AddItemMoreInformationController.loadItemDamageInformation(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)
POST        /trader/:ern/movement/:arc/item/:idx/select-damage-information-item/review        controllers.AddItemMoreInformationController.submitItemDamageInformation(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)

GET         /trader/:ern/movement/:arc/item/:idx/damage-information-item                      controllers.ItemMoreInformationController.loadItemDamageInformation(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/item/:idx/damage-information-item                      controllers.ItemMoreInformationController.submitItemDamageInformation(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/item/:idx/damage-information-item/change               controllers.ItemMoreInformationController.loadItemDamageInformation(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/item/:idx/damage-information-item/change               controllers.ItemMoreInformationController.submitItemDamageInformation(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
GET         /trader/:ern/movement/:arc/item/:idx/damage-information-item/review               controllers.ItemMoreInformationController.loadItemDamageInformation(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)
POST        /trader/:ern/movement/:arc/item/:idx/damage-information-item/review               controllers.ItemMoreInformationController.submitItemDamageInformation(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)

GET         /trader/:ern/movement/:arc/item/:idx/other-information-item                       controllers.ItemOtherInformationController.onPageLoad(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/item/:idx/other-information-item                       controllers.ItemOtherInformationController.onSubmit(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/item/:idx/other-information-item/change                controllers.ItemOtherInformationController.onPageLoad(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/item/:idx/other-information-item/change                controllers.ItemOtherInformationController.onSubmit(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
GET         /trader/:ern/movement/:arc/item/:idx/other-information-item/review                controllers.ItemOtherInformationController.onPageLoad(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)
POST        /trader/:ern/movement/:arc/item/:idx/other-information-item/review                controllers.ItemOtherInformationController.onSubmit(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)

GET         /trader/:ern/movement/:arc/item/:idx/select-refuse-item                           controllers.RefusingAnyAmountOfItemController.onPageLoad(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/item/:idx/select-refuse-item                           controllers.RefusingAnyAmountOfItemController.onSubmit(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/item/:idx/select-refuse-item/change                    controllers.RefusingAnyAmountOfItemController.onPageLoad(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/item/:idx/select-refuse-item/change                    controllers.RefusingAnyAmountOfItemController.onSubmit(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
GET         /trader/:ern/movement/:arc/item/:idx/select-refuse-item/review                    controllers.RefusingAnyAmountOfItemController.onPageLoad(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)
POST        /trader/:ern/movement/:arc/item/:idx/select-refuse-item/review                    controllers.RefusingAnyAmountOfItemController.onSubmit(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)

GET         /trader/:ern/movement/:arc/item/:idx/amount-refuse-item                           controllers.RefusedAmountController.onPageLoad(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/item/:idx/amount-refuse-item                           controllers.RefusedAmountController.onSubmit(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/item/:idx/amount-refuse-item/change                    controllers.RefusedAmountController.onPageLoad(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
POST        /trader/:ern/movement/:arc/item/:idx/amount-refuse-item/change                    controllers.RefusedAmountController.onSubmit(ern: String, arc: String, idx: Int, mode: Mode = CheckMode)
GET         /trader/:ern/movement/:arc/item/:idx/amount-refuse-item/review                    controllers.RefusedAmountController.onPageLoad(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)
POST        /trader/:ern/movement/:arc/item/:idx/amount-refuse-item/review                    controllers.RefusedAmountController.onSubmit(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)

GET         /trader/:ern/movement/:arc/item/:idx/check-answers-item                           controllers.CheckYourAnswersItemController.onPageLoad(ern: String, arc: String, idx: Int)

GET         /trader/:ern/movement/:arc/item/:idx/remove-from-list                             controllers.RemoveItemController.onPageLoad(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
POST        /trader/:ern/movement/:arc/item/:idx/remove-from-list                             controllers.RemoveItemController.onSubmit(ern: String, arc: String, idx: Int, mode: Mode = NormalMode)
GET         /trader/:ern/movement/:arc/item/:idx/remove-from-list/review                      controllers.RemoveItemController.onPageLoad(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)
POST        /trader/:ern/movement/:arc/item/:idx/remove-from-list/review                      controllers.RemoveItemController.onSubmit(ern: String, arc: String, idx: Int, mode: Mode = ReviewMode)

GET         /trader/:ern/movement/:arc/add-to-list                                            controllers.AddedItemsController.onPageLoad(ern, arc)
POST        /trader/:ern/movement/:arc/add-to-list                                            controllers.AddedItemsController.onSubmit(ern, arc)

GET         /trader/:ern/movement/:arc/not-permitted                                          controllers.NotPermittedPageController.onPageLoad(ern, arc)

# Legacy index route - TODO: remove when legacy is pointing at new index
GET         /:ern/:arc                                                                        controllers.IndexController.onPageLoadLegacy(ern: String, arc: String)

GET         /timeout                                                                          controllers.TimeoutController.onPageLoad()
